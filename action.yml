name: 'Delete untagged ghcr'
author: 'Chuzkiyahu Raful'
description: 'Delete containers on github container registry without tags'
branding:
  icon: 'trash-2'
  color: 'blue'
inputs:  
  token:
    description: >
      Personal access token (PAT) used to fetch the repository. The PAT is configured
      with the local git config, which enables your scripts to run authenticated git
      commands. The post-job step removes the PAT.
      needs delete:packages permissions
    required: true
 
  repository_owner:
    description: 'The repository owner name'
    default: ${{ github.repository_owner }}
    required: true

  repository:
    description: 'Delete only from repository name'
    required: false

  package_name:
    description: 'Delete only from package name'
    required: false

  untagged_only:
      description: 'Delete only package versions without tag'
      default: true

  except_untagged_multiplatform:
    description: 'Except untagged multiplatform packages from deletion (only for --untagged_only)'
    default: false
  
  owner_type:
      description : "Owner type (org or user)"
      required: true



runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip' # caching pip dependencies
    - run: pip install -r ${{ github.action_path }}/requirements.txt
      shell: bash
    - run: | 
        args="--token ${{ inputs.token }} "
        args+=" --repository_owner ${{ inputs.repository_owner }} "
        if [[ $repo ]]; then
          args+=" --repository $repo "
        fi
        if [[ $pkg ]]; then
          args+=" --package_name $pkg "
        fi
        args+=" --untagged_only ${{ inputs.untagged_only }} "
        args+=" --except_untagged_multiplatform ${{ inputs.except_untagged_multiplatform }} "
        args+=" --owner_type ${{ inputs.owner_type }} "
        echo "args: $args"
        python ${{ github.action_path }}/clean_ghcr.py $args
      shell: bash
      env:
        repo: ${{ inputs.repository }}
        pkg: ${{ inputs.package_name }}
