name: tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
concurrency: testing
jobs:
  add_temp_pkgs1:
    name: Add temporary packages for testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        i: [1,2]
        type: ['p1', 'p2']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: lower case repository
        id: lower_case_repository
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: ./CICD/Dockerfile_temp
          tags: ghcr.io/${{ steps.lower_case_repository.outputs.lowercase }}/${{ matrix.type }}:${{ matrix.i }}
          build-args: |
            I=${{ matrix.i }}
          push: true

  add_temp_pkgs2:
    name: Add temporary packages for testing make the first untagged
    runs-on: ubuntu-latest
    needs: add_temp_pkgs1
    strategy:
      matrix:
        i: [ 1,2 ]
        type: [ 'p1', 'p2' ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: lower case repository
        id: lower_case_repository
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: ./CICD/Dockerfile_temp
          tags: ghcr.io/${{ steps.lower_case_repository.outputs.lowercase }}/${{ matrix.type }}:${{ matrix.i }}
          build-args: |
            I=${{ matrix.i }}
          push: true
          platforms: linux/amd64,linux/arm64


  clean_untagged_pkgs1:
    name: clean untagged packages
    runs-on: ubuntu-latest
    needs: add_temp_pkgs2
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository_owner: ${{ github.repository_owner }}
          repository: ${{ github.repository }}
          untagged_only: true
          owner_type: user
          except_untagged_multiplatform: true

  clean_untagged_pkgs2:
    name: clean untagged packages
    runs-on: ubuntu-latest
    needs:   clean_untagged_pkgs1
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository_owner: ${{ github.repository_owner }}
          repository: ${{ github.repository }}
          untagged_only: true
          owner_type: user
          except_untagged_multiplatform: false

  delete_package:
    name: delete package
    runs-on: ubuntu-latest
    needs: clean_untagged_pkgs2
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository_owner: ${{ github.repository_owner }}
          repository: ${{ github.repository }}
          package_name: ${{ github.repository }}/p1
          untagged_only: false
          owner_type: user

  clean_repo:
    name: delete all package in repo
    runs-on: ubuntu-latest
    needs: delete_package
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository_owner: ${{ github.repository_owner }}
          repository: ${{ github.repository }}
          untagged_only: false
          owner_type: user
